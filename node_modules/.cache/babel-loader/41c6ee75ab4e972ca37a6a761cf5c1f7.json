{"ast":null,"code":"var _jsxFileName = \"/home/lix/Documents/GitHub/quizz/src/Components/Questions.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //import {nanoid} from 'nanoid'\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Questions = _ref => {\n  _s();\n\n  let {\n    questions\n  } = _ref;\n  const [color, setColor] = useState(false);\n\n  function changeColor() {\n    setColor(prevColor => !prevColor);\n  } //put all answers in an array and randomize them\n\n\n  function getAnswers(questions) {\n    const answers = [];\n    questions.map(questions => {\n      answers.push(questions.incorrect_answers);\n      answers.push(questions.correct_answer);\n      return answers;\n    });\n  }\n\n  console.log(getAnswers());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: questions.map(questions => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-questions\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: questions.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: 'correct-answer answer',\n          onClick: changeColor,\n          children: questions.correct_answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"incorrect-answers\",\n          children: questions.incorrect_answers.map(answer => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"answer incorrect-answer\",\n              children: answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n\n_s(Questions, \"cLRYe1lhQgCtbRcoGUJWGyNDLMo=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","Questions","questions","color","setColor","changeColor","prevColor","getAnswers","answers","map","push","incorrect_answers","correct_answer","console","log","question","answer"],"sources":["/home/lix/Documents/GitHub/quizz/src/Components/Questions.jsx"],"sourcesContent":["import React from 'react'\n//import {nanoid} from 'nanoid'\nimport {useState} from 'react'\n\nconst Questions = ({questions}) => {\n\n  const[color, setColor] = useState(false)\n\n  function changeColor(){\n    setColor(prevColor=> !prevColor)\n  }\n\n  //put all answers in an array and randomize them\n  \n  function getAnswers(questions){\n    const answers = []\n    questions.map((questions)=>{\n      answers.push(questions.incorrect_answers)\n      answers.push(questions.correct_answer)\n      return answers;\n    })\n  }\n  console.log(getAnswers())\n\n\n  return (\n    <>\n          {questions.map((questions)=>(\n          <div className='quiz-questions'>\n            <p className='question'>{questions.question}</p>\n           <div className=\"answers\">\n              <p className={'correct-answer answer'} onClick={changeColor}>{questions.correct_answer}</p>\n            <div className='incorrect-answers'>{questions.incorrect_answers.map((answer)=>{\n              return(\n                <p className='answer incorrect-answer'>{answer}</p>\n              )\n            })}</div>\n           </div>\n          </div>\n        )\n      )}\n    </>\n  )\n}\n\nexport default Questions"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;;AAEA,MAAMC,SAAS,GAAG,QAAiB;EAAA;;EAAA,IAAhB;IAACC;EAAD,CAAgB;EAEjC,MAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,KAAD,CAAjC;;EAEA,SAASK,WAAT,GAAsB;IACpBD,QAAQ,CAACE,SAAS,IAAG,CAACA,SAAd,CAAR;EACD,CANgC,CAQjC;;;EAEA,SAASC,UAAT,CAAoBL,SAApB,EAA8B;IAC5B,MAAMM,OAAO,GAAG,EAAhB;IACAN,SAAS,CAACO,GAAV,CAAeP,SAAD,IAAa;MACzBM,OAAO,CAACE,IAAR,CAAaR,SAAS,CAACS,iBAAvB;MACAH,OAAO,CAACE,IAAR,CAAaR,SAAS,CAACU,cAAvB;MACA,OAAOJ,OAAP;IACD,CAJD;EAKD;;EACDK,OAAO,CAACC,GAAR,CAAYP,UAAU,EAAtB;EAGA,oBACE;IAAA,UACOL,SAAS,CAACO,GAAV,CAAeP,SAAD,iBACf;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACE;QAAG,SAAS,EAAC,UAAb;QAAA,UAAyBA,SAAS,CAACa;MAAnC;QAAA;QAAA;QAAA;MAAA,QADF,eAEC;QAAK,SAAS,EAAC,SAAf;QAAA,wBACG;UAAG,SAAS,EAAE,uBAAd;UAAuC,OAAO,EAAEV,WAAhD;UAAA,UAA8DH,SAAS,CAACU;QAAxE;UAAA;UAAA;UAAA;QAAA,QADH,eAEC;UAAK,SAAS,EAAC,mBAAf;UAAA,UAAoCV,SAAS,CAACS,iBAAV,CAA4BF,GAA5B,CAAiCO,MAAD,IAAU;YAC5E,oBACE;cAAG,SAAS,EAAC,yBAAb;cAAA,UAAwCA;YAAxC;cAAA;cAAA;cAAA;YAAA,QADF;UAGD,CAJmC;QAApC;UAAA;UAAA;UAAA;QAAA,QAFD;MAAA;QAAA;QAAA;QAAA;MAAA,QAFD;IAAA;MAAA;MAAA;MAAA;IAAA,QADC;EADP,iBADF;AAkBD,CAvCD;;GAAMf,S;;KAAAA,S;AAyCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}