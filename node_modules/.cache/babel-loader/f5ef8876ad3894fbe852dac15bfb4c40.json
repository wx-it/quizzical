{"ast":null,"code":"var _jsxFileName = \"/home/lix/Documents/GitHub/quizz/src/Pages/Quizz.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport Questions from '../Components/Questions';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quizz = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  useEffect(() => {\n    dataQuestions();\n  }, []);\n\n  const dataQuestions = async () => {\n    const fetchData = await fetch(`https://opentdb.com/api.php?amount=10&category=${data.category}&difficulty=${data.difficulty}&type=multiple`);\n    const response = await fetchData.json();\n    const questionsData = response.results; //console.log(questionsData)\n\n    setQuestions(prevQuestions => questionsData);\n  };\n\n  const [questions, setQuestions] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-questions-container\",\n    children: /*#__PURE__*/_jsxDEV(Questions, {\n      questions: questions\n    }, nanoid.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quizz, \"HfYbrTn1HQ51r4z/32JdiZNxwlY=\");\n\n_c = Quizz;\nexport default Quizz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quizz\");","map":{"version":3,"names":["React","useEffect","useState","Questions","nanoid","Quizz","data","dataQuestions","fetchData","fetch","category","difficulty","response","json","questionsData","results","setQuestions","prevQuestions","questions","id"],"sources":["/home/lix/Documents/GitHub/quizz/src/Pages/Quizz.jsx"],"sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react'\nimport Questions from '../Components/Questions'\nimport { nanoid } from 'nanoid'\nconst Quizz = ({data}) => {\n    useEffect(()=>{\n        dataQuestions()\n    },[])\n\n    const dataQuestions = async() =>{\n        const fetchData = await fetch(`https://opentdb.com/api.php?amount=10&category=${data.category}&difficulty=${data.difficulty}&type=multiple`)\n        const response = await fetchData.json()\n        const questionsData = response.results\n        //console.log(questionsData)\n        setQuestions(prevQuestions => questionsData)\n      }\n    \n\n      const [questions, setQuestions] = useState([])\n\n  return (\n    <div className='quiz-questions-container'>\n    <Questions key={nanoid.id} questions={questions}/>\n    </div>\n  )\n}\n\nexport default Quizz"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AACA,MAAMC,KAAK,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EACtBL,SAAS,CAAC,MAAI;IACVM,aAAa;EAChB,CAFQ,EAEP,EAFO,CAAT;;EAIA,MAAMA,aAAa,GAAG,YAAU;IAC5B,MAAMC,SAAS,GAAG,MAAMC,KAAK,CAAE,kDAAiDH,IAAI,CAACI,QAAS,eAAcJ,IAAI,CAACK,UAAW,gBAA/F,CAA7B;IACA,MAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACK,IAAV,EAAvB;IACA,MAAMC,aAAa,GAAGF,QAAQ,CAACG,OAA/B,CAH4B,CAI5B;;IACAC,YAAY,CAACC,aAAa,IAAIH,aAAlB,CAAZ;EACD,CANH;;EASE,MAAM,CAACI,SAAD,EAAYF,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;EAEJ,oBACE;IAAK,SAAS,EAAC,0BAAf;IAAA,uBACA,QAAC,SAAD;MAA2B,SAAS,EAAEgB;IAAtC,GAAgBd,MAAM,CAACe,EAAvB;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CArBD;;GAAMd,K;;KAAAA,K;AAuBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}